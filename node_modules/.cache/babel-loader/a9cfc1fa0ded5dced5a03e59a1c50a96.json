{"ast":null,"code":"var _jsxFileName = \"/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx\";\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { Component } from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\nconst siblingCount = 1;\n\nclass BlogList extends Component {\n  constructor() {\n    super();\n\n    this.updatePage = (page, size) => {\n      const indexOfLastRecord = page * size;\n      const indexOfFirstRecord = indexOfLastRecord - size;\n      this.setState({\n        currentPaginationData: blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord)\n      });\n    };\n\n    this.updateRowsPerPage = size => {\n      this.setState({\n        currentPage: 1,\n        lastPageNumber: Math.ceil(blogs.posts.length / size),\n        pageSize: size\n      }); // we can just update the pageSize and have the currentPage as is\n\n      this.updatePage(1, size);\n    };\n\n    this.updatePageNumber = action => {\n      const currentPage = this.state.currentPage;\n      const lastPage = this.state.lastPageNumber;\n      const size = this.state.pageSize;\n      const page = action === 'increment' ? currentPage < lastPage ? currentPage + 1 : lastPage : currentPage > 1 ? currentPage - 1 : 1;\n      this.setState({\n        currentPage: page\n      });\n      this.updatePage(page, size);\n    };\n\n    this.updateCurrentPage = page => {\n      const size = this.state.pageSize;\n      this.setState({\n        currentPage: page\n      });\n      this.updatePage(page, size);\n    };\n\n    this.state = {\n      currentPage: 1,\n      currentPaginationData: blogs.posts.slice(0, 15),\n      lastPageNumber: Math.ceil(blogs.posts.length / 15),\n      pageSize: 15\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: this.state.currentPage,\n        lastPage: this.state.lastPageNumber,\n        onPageMove: this.updateCurrentPage,\n        onPageNumberChange: this.updatePageNumber,\n        onPageSizeOptionChange: this.updateRowsPerPage,\n        pageSize: parseInt(this.state.pageSize),\n        pageSizeOptions: PAGE_SIZES,\n        siblingCount: s // totalCount={blogs.posts.length}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        \"aria-label\": \"blog list\",\n        children: this.state.currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n          author: blog.author,\n          title: blog.title,\n          excerpt: blog.excerpt,\n          featureImage: blog.image\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BlogList;","map":{"version":3,"names":["BlogPost","Pagination","React","Component","blogs","PAGE_SIZES","siblingCount","BlogList","constructor","updatePage","page","size","indexOfLastRecord","indexOfFirstRecord","setState","currentPaginationData","posts","slice","updateRowsPerPage","currentPage","lastPageNumber","Math","ceil","length","pageSize","updatePageNumber","action","state","lastPage","updateCurrentPage","render","parseInt","s","map","blog","author","title","excerpt","image","id"],"sources":["/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { Component } from \"react\";\nimport blogs from \"../data/blogs.json\";\n\nconst PAGE_SIZES = [15, 25, 50, 100];\nconst siblingCount = 1;\n\nclass BlogList extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentPage: 1,\n      currentPaginationData: blogs.posts.slice(0, 15),\n      lastPageNumber: Math.ceil(blogs.posts.length / 15),\n      pageSize:15\n    };\n  };\n\n  updatePage = (page, size) => {\n    const indexOfLastRecord = page * size;\n    const indexOfFirstRecord = indexOfLastRecord - size;\n    this.setState({currentPaginationData: blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord)});\n  };\n\n  updateRowsPerPage = (size) => {\n    this.setState({\n      currentPage: 1,\n      lastPageNumber: Math.ceil(blogs.posts.length / size),\n      pageSize: size\n    }); // we can just update the pageSize and have the currentPage as is\n    this.updatePage(1, size);\n  };\n\n  updatePageNumber = (action) => {\n    const currentPage = this.state.currentPage;\n    const lastPage = this.state.lastPageNumber;\n    const size = this.state.pageSize;\n    const page = action === 'increment' ?\n      (currentPage < lastPage ?\n        currentPage + 1:\n        lastPage) :\n      (currentPage > 1 ?\n      currentPage - 1:\n      1);\n    this.setState({currentPage: page});\n    this.updatePage(page, size);\n  };\n\n  updateCurrentPage = (page) => {\n    const size = this.state.pageSize;\n    this.setState({currentPage: page});\n    this.updatePage(page, size);\n  };\n\n  render() {\n    return (\n      <div>\n        <Pagination\n          currentPage={this.state.currentPage}\n          lastPage={this.state.lastPageNumber}\n          onPageMove={this.updateCurrentPage}\n          onPageNumberChange={this.updatePageNumber}\n          onPageSizeOptionChange={this.updateRowsPerPage}\n          pageSize={parseInt(this.state.pageSize)}\n          pageSizeOptions={PAGE_SIZES}\n          siblingCount={s}\n          // totalCount={blogs.posts.length}\n        />\n        <ul\n          // Do not modify the aria-label below, it is used for Hatchways automation.\n          aria-label=\"blog list\"\n          >\n          {this.state.currentPaginationData.map((blog) => (\n            <BlogPost\n              key={blog.id}\n              author={blog.author}\n              title={blog.title}\n              excerpt={blog.excerpt}\n              featureImage={blog.image}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  };\n}\n\nexport default BlogList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}