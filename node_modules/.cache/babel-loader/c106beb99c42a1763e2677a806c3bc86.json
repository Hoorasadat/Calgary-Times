{"ast":null,"code":"var _jsxFileName = \"/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { useState } from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\nconst siblingCount = 1;\n\nfunction BlogList() {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPaginationData, setCurrentPaginationData] = useState(blogs.posts.slice(0, 15));\n  const [lastPage, setLastPage] = useState(Math.ceil(blogs.posts.length / 15));\n  const [pageSize, setPageSize] = useState(15);\n\n  const updatePage = (page, size) => {\n    const indexOfLastRecord = page * size;\n    const indexOfFirstRecord = indexOfLastRecord - size;\n    setCurrentPaginationData(blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord));\n  };\n\n  const updateRowsPerPage = size => {\n    setCurrentPage(1);\n    setLastPageNumber(Math.ceil(blogs.posts.length / size));\n    setPageSize(size);\n    updatePage(1, size);\n  };\n\n  const updatePageNumber = action => {\n    const page = action === 'increment' ? currentPage < lastPage ? currentPage + 1 : lastPage : currentPage > 1 ? currentPage - 1 : 1;\n    setCurrentPage(page);\n    updatePage(page, size);\n  };\n\n  const updateCurrentPage = page => {\n    setCurrentPage(page);\n    updatePage(page, pageSize);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      lastPage: lastPageNumber,\n      onPageMove: updateCurrentPage,\n      onPageNumberChange: updatePageNumber,\n      onPageSizeOptionChange: updateRowsPerPage,\n      pageSize: parseInt(pageSize),\n      pageSizeOptions: PAGE_SIZES,\n      siblingCount: siblingCount // totalCount={blogs.posts.length}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // Do not modify the aria-label below, it is used for Hatchways automation.\n      \"aria-label\": \"blog list\",\n      children: currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n        author: blog.author,\n        title: blog.title,\n        excerpt: blog.excerpt,\n        featureImage: blog.image\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogList, \"1P9kO5plJWP5uT4LmjfycvEz6gc=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["BlogPost","Pagination","React","useState","blogs","PAGE_SIZES","siblingCount","BlogList","currentPage","setCurrentPage","currentPaginationData","setCurrentPaginationData","posts","slice","lastPage","setLastPage","Math","ceil","length","pageSize","setPageSize","updatePage","page","size","indexOfLastRecord","indexOfFirstRecord","updateRowsPerPage","setLastPageNumber","updatePageNumber","action","updateCurrentPage","lastPageNumber","parseInt","map","blog","author","title","excerpt","image","id"],"sources":["/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { useState } from \"react\";\nimport blogs from \"../data/blogs.json\";\n\nconst PAGE_SIZES = [15, 25, 50, 100];\nconst siblingCount = 1;\n\nfunction BlogList() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [currentPaginationData, setCurrentPaginationData] = useState(blogs.posts.slice(0, 15));\n  const [lastPage, setLastPage] = useState(Math.ceil(blogs.posts.length / 15));\n  const [pageSize, setPageSize] = useState(15);\n\n  const updatePage = (page, size) => {\n    const indexOfLastRecord = page * size;\n    const indexOfFirstRecord = indexOfLastRecord - size;\n    setCurrentPaginationData(blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord));\n  };\n\n  const updateRowsPerPage = (size) => {\n    setCurrentPage(1);\n    setLastPageNumber(Math.ceil(blogs.posts.length / size));\n    setPageSize(size);\n    updatePage(1, size);\n  };\n\n  const updatePageNumber = (action) => {\n    const page = action === 'increment' ?\n      (currentPage < lastPage ?\n        currentPage + 1:\n        lastPage) :\n      (currentPage > 1 ?\n      currentPage - 1:\n      1);\n    setCurrentPage(page);\n    updatePage(page, size);\n  };\n\n  const updateCurrentPage = (page) => {\n    setCurrentPage(page);\n    updatePage(page, pageSize);\n  };\n\n  return (\n    <div>\n      <Pagination\n        lastPage={lastPageNumber}\n        onPageMove={updateCurrentPage}\n        onPageNumberChange={updatePageNumber}\n        onPageSizeOptionChange={updateRowsPerPage}\n        pageSize={parseInt(pageSize)}\n        pageSizeOptions={PAGE_SIZES}\n        siblingCount={siblingCount}\n        // totalCount={blogs.posts.length}\n      />\n      <ul\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        aria-label=\"blog list\"\n        >\n        {currentPaginationData.map((blog) => (\n          <BlogPost\n            key={blog.id}\n            author={blog.author}\n            title={blog.title}\n            excerpt={blog.excerpt}\n            featureImage={blog.image}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default BlogList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}