{"ast":null,"code":"var _jsxFileName = \"/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx\";\nimport BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { Component } from \"react\";\nimport blogs from \"../data/blogs.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nclass BlogList extends Component {\n  constructor() {\n    super();\n\n    this.updatePage = (page, size) => {\n      const indexOfLastRecord = page * size;\n      const indexOfFirstRecord = indexOfLastRecord - size;\n      this.setState({\n        currentPaginationData: blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord)\n      });\n    };\n\n    this.updateRowsPerPage = size => {\n      this.setState({\n        currentPage: 1,\n        pageSize: size\n      }); // we can just update the pageSize and have the currentPage as is\n\n      this.updatePage(1, size);\n    };\n\n    this.updatePageNumber = action => {\n      const size = this.state.pageSize;\n      const page = action === 'increment' ? this.state.currentPage < lastPageNumber ? this.state.currentPage + 1 : lastPageNumber : this.state.currentPage > 1 ? this.state.currentPage - 1 : 1;\n      this.setState({\n        currentPage: page\n      });\n      this.updatePage(page, size);\n    };\n\n    this.updateCurrentPage = page => {\n      const size = this.state.pageSize;\n      this.setState({\n        currentPage: page\n      });\n      this.updatePage(page, size);\n    };\n\n    this.state = {\n      currentPage: 1,\n      pageSize: 15,\n      currentPaginationData: blogs.posts.slice(0, 15)\n    };\n\n    const _lastPageNumber = Math.ceil(blogs.posts.length / this.state.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: 1,\n        lastPage: lastPageNumber,\n        onPageMove: this.updateCurrentPage,\n        onPageNumberChange: this.updatePageNumber,\n        onPageSizeOptionChange: this.updateRowsPerPage,\n        pageSize: null,\n        pageSizeOptions: PAGE_SIZES,\n        totalCount: blogs.posts.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        // Do not modify the aria-label below, it is used for Hatchways automation.\n        \"aria-label\": \"blog list\",\n        children: this.state.currentPaginationData.map(blog => /*#__PURE__*/_jsxDEV(BlogPost, {\n          author: blog.author,\n          title: blog.title,\n          excerpt: blog.excerpt,\n          featureImage: blog.image\n        }, blog.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BlogList;","map":{"version":3,"names":["BlogPost","Pagination","React","Component","blogs","PAGE_SIZES","BlogList","constructor","updatePage","page","size","indexOfLastRecord","indexOfFirstRecord","setState","currentPaginationData","posts","slice","updateRowsPerPage","currentPage","pageSize","updatePageNumber","action","state","lastPageNumber","updateCurrentPage","Math","ceil","length","render","map","blog","author","title","excerpt","image","id"],"sources":["/Users/hoora/Desktop/f9948f/src/components/BlogList.jsx"],"sourcesContent":["import BlogPost from \"./BlogPost\";\nimport Pagination from \"./Pagination\";\nimport React, { Component } from \"react\";\nimport blogs from \"../data/blogs.json\";\n\nconst PAGE_SIZES = [15, 25, 50, 100];\n\nclass BlogList extends Component {\n  constructor(){\n    super();\n    this.state = {\n      currentPage: 1,\n      pageSize:15,\n      currentPaginationData: blogs.posts.slice(0, 15)\n    };\n    const lastPageNumber = Math.ceil(blogs.posts.length / this.state.pageSize);\n  };\n\n  updatePage = (page, size) => {\n    const indexOfLastRecord = page * size;\n    const indexOfFirstRecord = indexOfLastRecord - size;\n    this.setState({currentPaginationData: blogs.posts.slice(indexOfFirstRecord, indexOfLastRecord)});\n  };\n\n  updateRowsPerPage = (size) => {\n    this.setState({currentPage: 1, pageSize: size}); // we can just update the pageSize and have the currentPage as is\n    this.updatePage(1, size);\n  };\n\n  updatePageNumber = (action) => {\n    const size = this.state.pageSize;\n    const page = action === 'increment' ?\n      (this.state.currentPage < lastPageNumber ?\n        this.state.currentPage + 1:\n        lastPageNumber) :\n      (this.state.currentPage > 1 ?\n      this.state.currentPage - 1:\n      1);\n    this.setState({currentPage: page});\n    this.updatePage(page, size);\n  };\n\n  updateCurrentPage = (page) => {\n    const size = this.state.pageSize;\n    this.setState({currentPage: page});\n    this.updatePage(page, size);\n  };\n\n  render() {\n    return (\n      <div>\n        <Pagination\n          currentPage={1}\n          lastPage={lastPageNumber}\n          onPageMove={this.updateCurrentPage}\n          onPageNumberChange={this.updatePageNumber}\n          onPageSizeOptionChange={this.updateRowsPerPage}\n          pageSize={null}\n          pageSizeOptions={PAGE_SIZES}\n          totalCount={blogs.posts.length}\n        />\n        <ul\n          // Do not modify the aria-label below, it is used for Hatchways automation.\n          aria-label=\"blog list\"\n          >\n          {this.state.currentPaginationData.map((blog) => (\n            <BlogPost\n              key={blog.id}\n              author={blog.author}\n              title={blog.title}\n              excerpt={blog.excerpt}\n              featureImage={blog.image}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  };\n}\n\nexport default BlogList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}